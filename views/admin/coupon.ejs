<%- include("../partial/admin/header.ejs") %>
<div class="content-header">
    <div>
        <h2 class="content-title card-title">Coupons</h2>
    </div>
</div>

<header class="card-header text-center mb-20">
    <form action="" method="get" class="d-inline">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px;">
            <input type="text" class="form-control border-0 rounded-pill" placeholder="Search coupon code " name="search">
            <button class="btn border-0" type="submit">Search</button>
        </div>
    </form>
</header>


<div class="container my-5">
    <!-- Button to trigger coupon creation modal -->
    <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#couponModal" onclick="openCouponModal()">Create Coupon</button>

    <!-- Coupon table -->
    <table class="table table-striped table-responsive-md">
        <thead class="table-dark">
            <tr>
                <th>Code</th>
                <th>Discount</th>
                <th>Type</th>
                <th>Minimum Price</th>
                <th>Maximum Price</th>
                <th>Expiry Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% coupons.forEach(coupon => { %>
                <tr>
                    <td><%= coupon.code %></td>
                    <td><%= coupon.discountType === 'percentage' ? coupon.discountAmount + '%' : '₹' + coupon.discountAmount %></td>
                    <td><%= coupon.discountType %></td>
                    <td>₹<%= coupon.minimumPrice %></td>
                    <td>₹<%=coupon.maximumPrice%></td>
                    <td><%= coupon.expiryDate.toDateString() %></td>
                    <td>
                        <!-- Update button triggers modal with coupon data -->
                        <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#couponModal"
                        onclick="openCouponModal('<%= JSON.stringify(coupon) %>')">Update</button>
                    
                    
                        <!-- Delete button with confirmation prompt -->
                        <button class="btn btn-danger btn-sm" onclick="deleteCoupon('<%= coupon._id %>')">Delete</button>
                    </td>
                </tr>
            <% }); %>
        </tbody>
    </table>
</div>

<!-- Coupon Modal -->
<div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="couponModalLabel">Create Coupon</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="couponForm" onsubmit="submitCouponForm(event)">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="couponCode" class="form-label">Coupon Code</label>
                        <input type="text" class="form-control" id="couponCode" name="code" required>
                    </div>
                    <div class="mb-3">
                        <label for="discountAmount" class="form-label">Discount Amount</label>
                        <input type="number" class="form-control" id="discountAmount" name="discountAmount" required>
                    </div>
                    <div class="mb-3">
                        <label for="discountType" class="form-label">Discount Type</label>
                        <select class="form-select" id="discountType" name="discountType" required>
                            <option value="fixed">Fixed</option>
                            <option value="percentage">Percentage</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="minimumPrice" class="form-label">Minimum Price</label>
                        <input type="number" class="form-control" id="minimumPrice" name="minimumPrice" required>
                    </div>
                    <div class="mb-3">
                        <label for="maximumPrice" class="form-label">Maximum Price</label>
                        <input type="number" class="form-control" id="maximumPrice" name="maximumPrice" required>
                    </div>
                    <div class="mb-3">
                        <label for="expiryDate" class="form-label">Expiry Date</label>
                        <input type="date" class="form-control" id="expiryDate" name="expiryDate" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Coupon</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="container mt-3">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center mb-20" style="margin-right: 200px;">
            <% for (let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %>" aria-current="<%= (i === currentPage) ? 'page' : '' %>"><%= i %></a>
            </li>
            <% } %>
        </ul>
    </nav>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Open the modal for creating or updating a coupon
    function openCouponModal(coupon = null) {
    // Parse coupon if passed as a JSON string
    coupon = coupon ? JSON.parse(coupon) : null;
    const isUpdate = Boolean(coupon);

    document.getElementById('couponModalLabel').textContent = isUpdate ? 'Update Coupon' : 'Create Coupon';
    document.getElementById('couponForm').action = isUpdate ? `/admin/coupon/update/${coupon._id}` : '/admin/coupon/create';

    // Populate form fields if updating
    document.getElementById('couponCode').value = coupon ? coupon.code : '';
    document.getElementById('discountAmount').value = coupon ? coupon.discountAmount : '';
    document.getElementById('discountType').value = coupon ? coupon.discountType : 'fixed';
    document.getElementById('minimumPrice').value = coupon ? coupon.minimumPrice : '';
    document.getElementById('maximumPrice').value = coupon ? coupon.maximumPrice : '';
    document.getElementById('expiryDate').value = coupon ? new Date(coupon.expiryDate).toISOString().split('T')[0] : '';
}


    // Submit form for creating or updating a coupon
  // Submit form for creating or updating a coupon
async function submitCouponForm(event) {
    event.preventDefault();
    const form = document.getElementById('couponForm');
    const formData = {
        code: form.code.value,
        discountAmount: form.discountAmount.value,
        discountType: form.discountType.value,
        minimumPrice: form.minimumPrice.value,
        maximumPrice : form.maximumPrice.value,
        expiryDate: form.expiryDate.value
    };
    
    const actionUrl = form.action;
    const method = actionUrl.includes('/update/') ? 'PUT' : 'POST';

    try {
        const response = await fetch(actionUrl, {
            method: method,
            headers: {
                'Content-Type': 'application/json' // Specify JSON content type
            },
            body: JSON.stringify(formData)
        });

        const result = await response.json();
        if (response.ok) {
            // Success SweetAlert
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: result.message,
                confirmButtonText: 'OK'
            }).then(() => {
                location.reload(); // Reload page on success
            });
        } else {
            // Error SweetAlert
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: result.message,
                confirmButtonText: 'Try Again'
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong. Please try again.',
            confirmButtonText: 'OK'
        });
    }
}

// Delete coupon function
async function deleteCoupon(couponId) {
    if (await Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => result.isConfirmed)) {
        try {
            const response = await fetch(`/admin/coupon/delete/${couponId}`, {
                method: 'DELETE'
            });

            const result = await response.json();
            if (response.ok) {
                // Success SweetAlert
                Swal.fire({
                    icon: 'success',
                    title: 'Deleted!',
                    text: result.message,
                    confirmButtonText: 'OK'
                }).then(() => {
                    location.reload(); // Reload page on success
                });
            } else {
                // Error SweetAlert
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message,
                    confirmButtonText: 'Try Again'
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Something went wrong. Please try again.',
                confirmButtonText: 'OK'
            });
        }
    }
}

</script>

<%- include("../partial/admin/footer.ejs") %>
